{"ast":null,"code":"var _jsxFileName = \"/Users/sarahclark/Documents/code/Projects/nodemailer-form/client/src/App.js\";\nimport React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async handleSubmit(e) {\n    e.preventdefault();\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      phone: this.state.phone,\n      zip: this.state.zip,\n      message: this.state.message\n    };\n    axios.post(\"/pi/form\", data).then(res => {\n      this.setState({\n        sent: true\n      }, this.resetForm()); // console.log(res)\n    }).catch(() => {\n      console.log('Message not sent');\n      console.log(data);\n    }); // const {name, email, message} = this.state\n    // const form = await axios.post('api/form', {\n    //   name: name,\n    //   email: email, \n    //   message: message\n    // })\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      style: {\n        width: '600px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Name\"), React.createElement(Input, {\n      type: \"text\",\n      name: \"name\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Email\"), React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Label, {\n      for: \"message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"message\"), React.createElement(Input, {\n      type: \"textarea\",\n      name: \"message\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Submit\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sarahclark/Documents/code/Projects/nodemailer-form/client/src/App.js"],"names":["React","Button","Form","FormGroup","Label","Input","axios","App","Component","constructor","handleChange","e","setState","target","name","value","state","email","message","bind","handleSubmit","preventdefault","data","phone","zip","post","then","res","sent","resetForm","catch","console","log","render","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios'\n\nclass App extends React.Component {\n  constructor() {\n    super()\n\n    this.state = {\n      name: '',\n      email: '',\n      message: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  async handleSubmit(e) {\n    e.preventdefault()\n\n    let data = {\n      name: this.state.name,\n      email: this.state.email,\n      phone: this.state.phone,\n      zip: this.state.zip,\n      message: this.state.message\n  }\n\n  axios.post(\"/pi/form\", data)\n\n      .then(res => {\n          this.setState({ sent: true }, this.resetForm());\n          // console.log(res)\n      })\n      .catch(() => {\n          console.log('Message not sent')\n          console.log(data)\n      })\n\n    // const {name, email, message} = this.state\n\n    // const form = await axios.post('api/form', {\n    //   name: name,\n    //   email: email, \n    //   message: message\n    // })\n  }\n\n  resetForm() {\n    this.setState({\n      name: \"\",\n      email: \"\",\n      message: \"\"\n    })\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.handleSubmit} style={{ width: '600px' }}>\n        <FormGroup>\n          <Label for=\"Name\">Name</Label>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"email\">Email</Label>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            onChange={this.handleChange} />\n        </FormGroup>\n\n        <FormGroup>\n          <Label for=\"message\">message</Label>\n          <Input\n            type=\"textarea\"\n            name=\"message\"\n            onChange={this.handleChange} />\n        </FormGroup>\n\n        <Button>Submit</Button>\n      </Form>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}